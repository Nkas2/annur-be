// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  // output   = "../generated/prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Role {
  id   Int    @id @default(autoincrement())
  name String @unique @db.VarChar(100)
  user User[]

  @@map("roles")
}

model Image {
  id         Int      @id @default(autoincrement())
  path       String   @db.VarChar(255)
  created_at DateTime @default(now())

  userId Int?  @unique
  user   User? @relation(fields: [userId], references: [id])

  eventId Int?
  event   Event? @relation(fields: [eventId], references: [id])

  @@map("images_path")
}

model User {
  id            Int      @id @default(autoincrement())
  username      String   @unique @db.VarChar(100)
  password      String   @db.VarChar(100)
  email         String?  @unique @db.VarChar(100)
  role          Int
  created_at    DateTime @default(now())
  image_profile Image?
  name          String   @db.VarChar(100)
  token         String?  @db.VarChar(255)

  event           Event[]
  prayer_schedule PrayerSchedule[]

  roles        Role           @relation(fields: [role], references: [id])
  Transactions Transactions[]

  @@map("users")
}

// model DonationType {
//   id       Int        @id @default(autoincrement())
//   name     String     @unique @db.VarChar(100)
//   donation Donation[]
//
//   @@map("donations_type")
// }
//
// model Donation {
//   id            Int      @id @default(autoincrement())
//   type_id       Int
//   total         Decimal  @db.Decimal(12, 2)
//   date          DateTime @db.Date
//   remark        String   @db.VarChar(255)
//   created_at    DateTime @default(now())
//   created_by_id Int
//
//   created_by User         @relation(fields: [created_by_id], references: [id])
//   type       DonationType @relation(fields: [type_id], references: [id])
//
//   @@map("donations")
// }
//
// model ExpenseType {
//   id       Int       @id @default(autoincrement())
//   name     String    @unique @db.VarChar(100)
//   expenses Expense[]
//
//   @@map("expenses_type")
// }
//
// model Expense {
//   id            Int      @id @default(autoincrement())
//   type_id       Int
//   total         Decimal  @db.Decimal(12, 2)
//   date          DateTime @db.Date
//   remark        String   @db.VarChar(255)
//   created_at    DateTime @default(now())
//   created_by_id Int
//
//   created_by User        @relation(fields: [created_by_id], references: [id])
//   type       ExpenseType @relation(fields: [type_id], references: [id])
//
//   @@map("expenses")
// }

model Transactions {
  id               Int      @id @default(autoincrement())
  amount           Decimal  @db.Decimal(12, 2)
  date             DateTime @db.Date
  remark           String   @db.VarChar(255)
  created_at       DateTime @default(now())
  created_by_id    Int
  transaction_type String   @db.VarChar(100)

  created_by User @relation(fields: [created_by_id], references: [id])

  @@map("transactions")
}

model EventType {
  id    Int     @id @default(autoincrement())
  name  String  @unique @db.VarChar(100)
  event Event[]

  @@map("event_type")
}

model Event {
  id            Int       @id @default(autoincrement())
  title         String    @db.VarChar(100)
  description   String    @db.LongText
  event_start   DateTime  @db.DateTime()
  event_end     DateTime  @db.DateTime()
  images        Image[]
  created_at    DateTime  @default(now())
  created_by_id Int
  created_by    User      @relation(fields: [created_by_id], references: [id])
  type_id       Int
  type          EventType @relation(fields: [type_id], references: [id])

  @@map("events")
}

model PrayerSchedule {
  id            Int      @id @default(autoincrement())
  name          String   @db.VarChar(100)
  schedule      DateTime @db.DateTime()
  created_at    DateTime @default(now())
  created_by_id Int

  created_by User @relation(fields: [created_by_id], references: [id])

  @@map("prayer_schedule")
}
